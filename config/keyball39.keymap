#define DEFAULT 0
#define NUM     1
#define SYM     2
#define FUN     3
#define MOUSE   4
#define SCROLL  5
#define SNIPE   6

#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

&caps_word { continue-list = <UNDERSCORE MINUS>; };

/ {
    // custom shift using mod-morph 

    behaviors {
        cmqus: comma_question {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_QUESTION";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp QUESTION>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dtsmi: dot_semi {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_SEMI";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp SEMI>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    macros {
        new_macro4: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp F &kp A &kp B>;
            label = "NEW_MACRO";
        };

        new_macro0: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(Q) &kp LS(Z) &kp U &kp G &kp X &kp NUMBER_2 &kp J &kp I &kp R &kp LS(R)>;
            label = "NEW_MACRO";
        };

        new_macro1: new_macro1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N1 &kp Q &kp A &kp Z &kp X &kp S &kp W &kp N2>;
            label = "NEW_MACRO1";
        };

        new_macro2: new_macro2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N1 &kp N1 &kp N4 &kp N1 &kp N0 &kp N9 &kp N2>;
            label = "NEW_MACRO2";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "QWRT";
            bindings = <
&kp Q           &kp W     &kp E         &lt 2 R                    &kp T                                       &kp Y        &kp U  &kp I      &kp O    &kp P
&kp A           &kp S     &kp D         &lt 4 F                    &lt 5 G                                     &kp H        &kp J  &kp K      &kp L    &lt 1 MINUS
&kp Z           &kp X     &kp C         &kp V                      &kp B                                       &lt 1 N      &kp M  &kp COMMA  &kp DOT  &mo 5
&kp LEFT_SHIFT  &mkp MB2  &kp LEFT_WIN  &mt LEFT_ALT INT_MUHENKAN  &lt 4 SPACE  &lt 5 INT_KANA  &kp BACKSPACE  &lt 2 ENTER                             &kp LANG5
            >;
        };

        number_layer {
            label = "NUM";
            bindings = <
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0
&bt BT_CLR    &kp DOWN      &kp UP_ARROW  &kp RIGHT     &none                         &none         &mkp MB1      &none         &none         &none
&none         &none         &none         &none         &none                         &none         &none         &trans        &trans        &none
&trans        &trans        &trans        &trans        &trans        &trans  &trans  &trans                                                  &trans
            >;
        };

        symbol_layer {
            label = "SYM";
            bindings = <
&kp DOLLAR           &kp SQT               &kp LEFT_PARENTHESIS   &kp RIGHT_PARENTHESIS  &kp LA(UP_ARROW)                                  &kp LC(LS(O))  &kp LG(D)       &kp HOME        &kp LG(L)        &kp ESCAPE
&kp AT_SIGN          &kp LS(N5)            &kp UNDER              &kp AMPERSAND          &kp LA(LEFT_ARROW)                                &kp LC(LS(N))  &mkp MB1        &kp UP_ARROW    &mkp MB2         &kp COLON
&kp LEFT_SHIFT       &kp LEFT_WIN          &kp LS(DOUBLE_QUOTES)  &kp HASH               &kp LA(RIGHT_ARROW)                               &kp LC(N)      &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp SEMICOLON
&kp LC(LS(KP_PLUS))  &kp LS(LC(KP_MINUS))  &kp LA(F4)             &kp LEFT_SHIFT         &kp TAB              &kp INT_MUHENKAN  &kp RCTRL  &trans                                                          &new_macro4
            >;
        };

        function_layer {
            label = "FUN";
            bindings = <
&kp F1  &kp F2   &kp F3   &kp F4   &none                   &none   &none  &none  &none  &none
&kp F5  &kp F6   &kp F7   &kp F8   &none                   &none   &none  &none  &none  &none
&kp F9  &kp F10  &kp F11  &kp F12  &none                   &none   &none  &none  &none  &none
&trans  &trans   &trans   &trans   &trans  &trans  &trans  &trans                       &trans
            >;
        };

        mouse_layer {
            label = "MOUSE";
            bindings = <
&kp LC(W)       &kp F2          &kp F3                &kp F4          &kp F5                            &kp LC(X)  &kp F7              &kp LC(PAGE_UP)     &kp LC(PAGE_DOWN)    &kp LC(N1)
&kp LCTRL       &kp LC(T)       &kp F6                &kp F12         &mkp MB2                          &kp LC(C)  &mkp LCLK           &kp LG(UP_ARROW)    &mkp RCLK            &kp LC(N1)
&kp LEFT_SHIFT  &kp HOME        &kp END               &kp LEFT_SHIFT  &mkp MB1                          &kp LC(V)  &kp LG(LEFT_ARROW)  &kp LG(DOWN_ARROW)  &kp LG(RIGHT_ARROW)  &kp EXCLAMATION
&none           &kp KP_NUMLOCK  &kp NON_US_BACKSLASH  &trans          &trans    &kp LANGUAGE_5  &trans  &mo 3                                                                   &kp QUESTION
            >;
        };

        scroll_layer {
            label = "SCROLL";
            bindings = <
&new_macro0  &kp ASTERISK     &kp KP_PLUS  &kp KP_MINUS      &kp EQUAL                       &kp PRINTSCREEN  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp SLASH
&new_macro1  &kp LS(LC(TAB))  &kp LC(TAB)  &kp LG(NUMBER_4)  &kp LA(LCTRL)                   &kp PERIOD       &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp COMMA
&new_macro2  &trans           &trans       &trans            &trans                          &kp KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp EXCLAMATION
&trans       &trans           &trans       &trans            &trans         &trans  &kp DEL  &trans                                                              &kp QUESTION
            >;
        };

        snipe_layer {
            label = "SNIPE";
            bindings = <
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                          &trans
            >;
        };
    };
};
